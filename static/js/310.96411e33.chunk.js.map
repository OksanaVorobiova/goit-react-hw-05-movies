{"version":3,"file":"static/js/310.96411e33.chunk.js","mappings":"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","sources":["api/getInfo.js","components/HomePage/TrendingFilms/TrendingFilms.styled.js","components/Spinner/Spinner.styled.js","components/Spinner/Spinner.jsx","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx","pages/NotFound/NotFound.styled.js","pages/NotFound/NotFound.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = `0be17033588433ae451a609394607ef8`;\nconst ENDPOINT = `https://api.themoviedb.org/3`;\n\naxios.defaults.baseURL = ENDPOINT;\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n};\n\nexport const getCast = async id => {\n  try {\n    const res = await axios.get(`/movie/${id}/credits`);\n    return res.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getDetails = async id => {\n  try {\n    const res = await axios.get(`/movie/${id}`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getFiltered = async query => {\n  const config = {\n    params: {\n      query: query,\n      page: 1,\n    },\n  };\n\n  try {\n    const res = await axios.get(`/search/movie`, config);\n    return res.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getTrending = async () => {\n  const res = await axios.get(`/trending/movie/day`);\n  //console.log(res.data.results);\n  return res.data.results;\n};\n\nexport const getReviews = async id => {\n  try {\n    const res = await axios.get(`/movie/${id}/reviews`);\n    console.log(res);\n    return res.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const TrendingFilmsList = styled.ul`\n  list-style-type: none;\n  width: 90%;\n  // box-sizing: border-box;\n  margin: 0;\n  padding: 10px;\n  border: 3px dashed #ef9b70;\n  border-radius: 8px;\n  margin-top: 10px;\n  //overflow: hidden;\n\n  li {\n    padding: 6px;\n  }\n`;\n\nexport const StyledFilmLink = styled(NavLink)`\n  color: #732700;\n\n  &.active {\n    color: #730043;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  position: absolute;\n  top: 60px;\n  left: 0;\n  padding: 10px;\n  margin: 0 auto;\n  display: inline-block;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import { ThreeCircles } from 'react-loader-spinner';\nimport { Container } from './Spinner.styled';\n\nexport const Spinner = () => {\n  return (\n    <Container>\n      <ThreeCircles\n        height=\"70\"\n        width=\"70\"\n        color=\"#f18a63;\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n        ariaLabel=\"three-circles-rotating\"\n      />\n    </Container>\n  );\n};\n","import styled from 'styled-components';\n\nexport const MoviesPage = styled.section`\n  position: absolute;\n  top: 60px;\n  background-color: rgb(254, 246, 242);\n  min-width: 100vw;\n  padding-top: 20px;\n  padding-bottom: 15px;\n\n  form {\n    display: flex;\n    justify-content: center;\n    flex-grow: 1;\n    margin: 0px;\n    padding: 0px;\n    align-items: center;\n    gap: 7px;\n    margin: 0 auto;\n\n    input {\n      padding: 4px;\n      border: 1px solid #ef9b70;\n      border-radius: 8px;\n    }\n\n    button {\n      background-color: #f18a63;\n      width: 100px;\n      border: 1px solid #ef9b70;\n      border-radius: 8px;\n      padding: 4px;\n      font-weight: 600;\n      color: black;\n    }\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Notify } from 'notiflix';\nimport { getFiltered } from 'api/getInfo';\nimport { useSearchParams } from 'react-router-dom';\nimport { MoviesPage } from './Movies.styled';\nimport {\n  TrendingFilmsList,\n  StyledFilmLink,\n} from 'components/HomePage/TrendingFilms/TrendingFilms.styled';\nimport { Spinner } from 'components/Spinner/Spinner';\nimport NotFound from 'pages/NotFound/NotFound';\n\nconst STATUS = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nconst Movies = () => {\n  const [films, setFilms] = useState([]);\n  const [status, setStatus] = useState(STATUS.IDLE);\n  const [query, setQuery] = useSearchParams();\n\n  const queryValue = query.get('query') ?? '';\n  const location = useLocation();\n\n  const updateQueryValue = value => {\n    const newQuery = value !== '' ? { query: value } : {};\n    setQuery(newQuery);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    // console.log(e.currentTarget.elements.search.value);\n    const value = e.currentTarget.elements.search.value;\n    updateQueryValue(value);\n  };\n\n  useEffect(() => {\n    const loadFilms = async () => {\n      try {\n        setStatus(STATUS.PENDING);\n        const response = await getFiltered(queryValue);\n\n        if (response.length > 0) {\n          setStatus(STATUS.RESOLVED);\n          setFilms([...response]);\n        } else {\n          setStatus(STATUS.IDLE);\n          Notify.info('No films by this query');\n        }\n      } catch (error) {\n        setStatus(STATUS.REJECTED);\n      }\n    };\n\n    if (queryValue) {\n      loadFilms();\n    }\n  }, [queryValue]);\n\n  /*  const handleChange = e => {\n    const inputValue = e.currentTarget.value.trim();\n\n    inputValue ? setQuery({ query: inputValue }) : setQuery({});\n  };\n\n  const loadFilteredFilms = async queryValue => {\n    try {\n      setStatus(STATUS.PENDING);\n      const response = await getFiltered(queryValue);\n\n      if (response.length > 0) {\n        setFilms([...response]);\n        setStatus(STATUS.RESOLVED);\n      } else {\n        setStatus(STATUS.IDLE);\n        Notify.info('No films by this query');\n      }\n    } catch (error) {\n      setStatus(STATUS.REJECTED);\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    // console.log(e.currentTarget.elements.search);\n    //const inputValue = e.currentTarget.elements.search.value.trim();\n\n    //inputValue ? setQuery({ query: inputValue }) : setQuery({});\n    //const queryValue = query.get('query') ?? '';\n    // console.log(queryValue);\n    loadFilteredFilms(queryValue);\n  }; */\n\n  return (\n    <MoviesPage>\n      <form onSubmit={handleSubmit}>\n        <input name=\"search\" />\n        <button type=\"submit\">Search</button>\n      </form>\n      {status === STATUS.PENDING && <Spinner />}\n      {status === STATUS.RESOLVED && (\n        <TrendingFilmsList>\n          {films &&\n            films.map(({ title, id }) => (\n              <li key={id}>\n                <StyledFilmLink to={`${id}`} state={{ from: location }}>\n                  {title}\n                </StyledFilmLink>\n              </li>\n            ))}\n        </TrendingFilmsList>\n      )}\n      {status === STATUS.REJECTED && <NotFound />}\n    </MoviesPage>\n  );\n};\n\nexport default Movies;\n","import styled from 'styled-components';\n\nexport const NotFoundPage = styled.section`\n  width: 70vw;\n  //margin: auto;\n  background-color: #feb4b4;\n  border: 1px solid #ec0404;\n  height: 70vh;\n  border-radius: 8px;\n  position: absolute;\n  top: 10vh;\n  left: 15vw;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  p {\n    font-size: 20px;\n    color: #ec0404;\n    margin: auto;\n    display: inline-block;\n  }\n`;\n","import { NotFoundPage } from './NotFound.styled';\n\nconst NotFound = () => {\n  return (\n    <NotFoundPage>\n      <p>This page doesn`t exist</p>\n    </NotFoundPage>\n  );\n};\n\nexport default NotFound;\n"],"names":["axios","api_key","language","getCast","id","res","data","cast","console","log","getDetails","getFiltered","query","config","params","page","results","getTrending","getReviews","TrendingFilmsList","styled","StyledFilmLink","NavLink","Container","Spinner","height","width","color","wrapperStyle","wrapperClass","visible","ariaLabel","MoviesPage","STATUS","useState","films","setFilms","status","setStatus","useSearchParams","setQuery","queryValue","get","location","useLocation","useEffect","loadFilms","response","length","Notify","onSubmit","e","preventDefault","value","updateQueryValue","currentTarget","elements","search","name","type","map","title","to","state","from","NotFound","NotFoundPage"],"sourceRoot":""}