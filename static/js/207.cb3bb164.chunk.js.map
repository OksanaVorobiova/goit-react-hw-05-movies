{"version":3,"file":"static/js/207.cb3bb164.chunk.js","mappings":"8PAGMA,EAAQ,+BAEdC,EAAAA,EAAAA,SAAAA,QAAyBD,EACzBC,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QALW,mCAMXC,SAAU,QACVC,KAAM,GAGD,IAAMC,EAAW,mCAAG,WAAMC,GAAN,gFACnBC,EAAS,CACbC,OAAQ,CACNF,MAAOA,IAHc,kBAQLL,EAAAA,EAAAA,IAAA,UAAaD,EAAb,iBAAsCO,GARjC,cAQjBE,EARiB,yBAShBA,EAAIC,KAAKC,SATO,gCAWvBC,QAAQC,IAAR,MAXuB,yDAAH,sD,SCsCxB,EA7Ce,WAAO,IAAD,EACnB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BC,EAAAA,EAAAA,MAA1B,eAAOX,EAAP,KAAcY,EAAd,KACMC,EAAU,UAAGb,EAAMc,IAAI,gBAAb,QAAyB,GAQnCC,EAAiB,mCAAG,WAAMF,GAAN,uFACDd,EAAYc,GADX,OAClBG,EADkB,OAExBN,GAAS,OAAIM,IAFW,2CAAH,sDAgBvB,OACE,iCACE,kBAAMC,SAbW,SAAAC,GACnBA,EAAEC,iBAOFJ,EAAkBF,EACnB,EAIG,WACE,kBAAOO,KAAK,SAASC,SAzBN,SAAAH,GACnB,IAAMI,EAAaJ,EAAEK,cAAcC,MAAMC,OAE5Bb,EAAbU,EAAsB,CAAEtB,MAAOsB,GAAyB,CAAC,EAC1D,KAsBK,mBAAQI,KAAK,SAAb,wBAEF,wBACGjB,GACCA,EAAMkB,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAV,OACR,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,GAAb,SAAoBD,KADbC,EADD,QAQnB,C","sources":["api/getFiltered.js","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = `0be17033588433ae451a609394607ef8`;\nconst ENDPOINT = `https://api.themoviedb.org/3`;\n\naxios.defaults.baseURL = ENDPOINT;\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n  page: 1,\n};\n\nexport const getFiltered = async query => {\n  const config = {\n    params: {\n      query: query,\n    },\n  };\n\n  try {\n    const res = await axios.get(`${ENDPOINT}/search/movie`, config);\n    return res.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getFiltered } from 'api/getFiltered';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [films, setFilms] = useState([]);\n  const [query, setQuery] = useSearchParams();\n  const queryValue = query.get('query') ?? '';\n\n  const handleChange = e => {\n    const inputValue = e.currentTarget.value.trim();\n\n    inputValue ? setQuery({ query: inputValue }) : setQuery({});\n  };\n\n  const loadFilteredFilms = async queryValue => {\n    const response = await getFiltered(queryValue);\n    setFilms([...response]);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    // console.log(e.currentTarget.elements.search);\n    //const inputValue = e.currentTarget.elements.search.value.trim();\n\n    //inputValue ? setQuery({ query: inputValue }) : setQuery({});\n    //const queryValue = query.get('query') ?? '';\n    // console.log(queryValue);\n    loadFilteredFilms(queryValue);\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input name=\"search\" onChange={handleChange} />\n        <button type=\"submit\">Search</button>\n      </form>\n      <ul>\n        {films &&\n          films.map(({ title, id }) => (\n            <li key={id}>\n              <Link to={`${id}`}>{title}</Link>\n            </li>\n          ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["ENDPOINT","axios","api_key","language","page","getFiltered","query","config","params","res","data","results","console","log","useState","films","setFilms","useSearchParams","setQuery","queryValue","get","loadFilteredFilms","response","onSubmit","e","preventDefault","name","onChange","inputValue","currentTarget","value","trim","type","map","title","id","to"],"sourceRoot":""}